name: Windows Installer

on:
  release:
     types: [published]
  workflow_dispatch:
  push:
    paths:
      - '**/*.py'        # Watch for changes in any Python files

concurrency:
  group: ci-${{github.workflow}}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  windows_installer:
    runs-on: 'windows-latest'
    strategy:
      matrix:
        python-version: ['3.12']

    permissions:
      contents: write
      id-token: write  # Needed for keyless signing
      actions: read    # Needed for provenance generation

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install -U wheel pip
          python -m pip install -U pywin32
          python -m pip install -U pyinstaller packaging

      - name: Download Inno Setup installer
        run: curl -L -o installer.exe http://files.jrsoftware.org/is/6/innosetup-6.3.3.exe

      - name: Install Inno Setup
        run: ./installer.exe /verysilent /allusers /dir=inst

      - name: Build ardupilot_methodic_configurator
        run: |
          python -m pip install . --user
          python -m pip list

      - name: Prepare installer
        run: |
          cd ardupilot_methodic_configurator
          copy ..\\windows\\ardupilot_methodic_configurator.spec
          pyinstaller --clean ardupilot_methodic_configurator.spec
          del ardupilot_methodic_configurator.spec

      - name: Write the git commit hash to file
        run: echo $(git rev-parse HEAD) > git_hash.txt

      - name: Build installer
        run: |
          cd windows
          $env:VERSION=$(python return_version.py)
          curl -L -o "c:\program files (x86)\inno setup 6\Languages\ChineseSimplified.isl" https://raw.githubusercontent.com/jrsoftware/issrc/refs/heads/main/Files/Languages/Unofficial/ChineseSimplified.isl
          ISCC.exe /dMyAppVersion=$env:VERSION ardupilot_methodic_configurator.iss
          ls Output

      - name: Install Cosign
        uses: sigstore/cosign-installer@11086d25041f77fe8fe7b9ea4e48e3b9192b8f19 # v3.4.0

      - name: Generate hashes
        id: hash
        run: |
          cd windows/Output
          $files = Get-ChildItem -Filter *.exe | ForEach-Object { $_.Name }
          $hashes = $files | ForEach-Object {
            $hash = (Get-FileHash -Algorithm SHA256 $_).Hash
            $encoded = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes("$($hash)  $_"))
            $encoded
          }
          echo "hashes=$(($hashes -join ','))" >> $env:GITHUB_OUTPUT

      - name: Store Executable Path
        id: exe_path
        run: |
          cd windows/Output
          $exePath = Get-ChildItem -Filter *.exe | Select-Object -First 1 -ExpandProperty FullName
          echo "exe_path=$exePath" >> $env:GITHUB_OUTPUT

      - name: Generate SLSA provenance
        uses: slsa-framework/slsa-github-generator/actions/generator/generic/create-base64-subjects-from-file@5a775b367a56d5bd118a224a811bba288150a563
        with:
          path: ${{ steps.exe_path.outputs.exe_path }}

      - name: Sign artifacts
        run: |
          cd windows/Output
          # Sign each installer file
          Get-ChildItem -Filter *.exe | ForEach-Object {
            cosign sign-blob --yes $_.Name
            # Generate signature file
            cosign sign-blob --yes $_.Name > "$($_.Name).sig"
          }

      - name: Upload signatures
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: signatures
          path: |
            windows/Output/*.sig
            *.intoto.jsonl
          retention-days: 7

      - name: Archive build
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
           name: ardupilot_methodic_configurator_setup
           path: windows/Output
           retention-days: 7

      - name: Pre Release
        uses: "rearrangement/auto-releases@e0660c0d60165d4902ebdb4fdcc3c029e94f7215" # v1.1
        if: github.ref == 'refs/heads/master'
        with:
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: windows/Output/*.*
          repo_token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Release
        uses: "rearrangement/auto-releases@e0660c0d60165d4902ebdb4fdcc3c029e94f7215" # v1.1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          prerelease: false
          files: windows/Output/*.*
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
