name: Extract i18n Strings

on:
  push:
    branches:
      - master
    paths:
      - '**/*.py'
      - '!tests/**'
  workflow_dispatch:

# prevent race conditions
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  extract_strings:
    permissions:
      contents: write       # for creating branches and commits
      pull-requests: write  # for creating PRs
    runs-on: ubuntu-latest
    env:
      PYGETTEXT_DOMAIN: ardupilot_methodic_configurator
      PYGETTEXT_LOCALEDIR: ardupilot_methodic_configurator/locale
      PO_FILES_CHANGED: false

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: '3.x'

      - name: Install apt gettext package
        run: |
          sudo apt-get update
          sudo apt-get install -y gettext=0.21-14ubuntu2

      - name: Install python-gettext requirement
        id: install_deps
        continue-on-error: true
        run: |
          WARNINGS=0

          export PIP_VERSION=$(grep -oP 'pip\s*==\s*\K[0-9]+(\.[0-9]+)*' pyproject.toml || echo '')
          export PYTHON_GETTEXT_VERSION=$(grep -oP 'python-gettext\s*==\s*\K[0-9]+(\.[0-9]+)*' pyproject.toml || echo '')

          if [ -z "$PIP_VERSION" ]; then
            echo "::warning::Could not detect pip version in pyproject.toml; falling back to latest."
            PIP_INSTALL="pip"
            WARNINGS=1
          else
            echo "Will install pip version $PIP_VERSION."
            PIP_INSTALL="pip==$PIP_VERSION"
          fi

          if [ -z "$PYTHON_GETTEXT_VERSION" ]; then
            echo "::warning::Could not detect python-gettext version in pyproject.toml; falling back to 5.0."
            PYTHON_GETTEXT_INSTALL="python-gettext==5.0"
            WARNINGS=1
          else
            echo "Will install python-gettext version $PYTHON_GETTEXT_VERSION."
            PYTHON_GETTEXT_INSTALL="python-gettext==$PYTHON_GETTEXT_VERSION"
          fi

          python -m pip install "$PIP_INSTALL" "$PYTHON_GETTEXT_INSTALL"

          echo "warnings=$WARNINGS" >> $GITHUB_OUTPUT
          if [ "$WARNINGS" -eq 1 ]; then
            exit 1
          fi

      - name: Extract strings
        run: |
          python create_pot_file.py

      - name: Stage changes
        run: |
          git add $PYGETTEXT_LOCALEDIR/$PYGETTEXT_DOMAIN.pot
          if [ -n "$(git status --porcelain)" ]; then
            CHANGED_LINES=$(git diff --staged | grep -E "^[\+\-]" | wc -l)
            if [ $CHANGED_LINES -gt 4 ]; then
              python merge_pot_file.py
              # Check if any .po files were modified
              git add $PYGETTEXT_LOCALEDIR/**/$PYGETTEXT_DOMAIN.po
              PO_CHANGES=$(git status --porcelain | grep -E "\.po$" | wc -l)
              if [ $PO_CHANGES -gt 0 ]; then
                echo "PO_FILES_CHANGED=true" >> $GITHUB_ENV
              fi
            else
              echo "Not enough changes to commit (only $CHANGED_LINES lines changed)"
            fi
          else
            echo "No changes to commit"
          fi

      - name: Create Pull Request
        if: env.PO_FILES_CHANGED == 'true'
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          labels: i18n, automated-pr
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: merge-i18n-po-strings
          title: "Merge new un-translated string(s) to existing .po files"
          commit-message: "chore(translations): merge new un-translated string(s) to existing .po files"
          body: |
            Update .pot file with new un-translated string(s) from the source code
            Merge .pot file strings into existing .po files
          delete-branch: true
