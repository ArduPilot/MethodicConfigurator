# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: PyPI Package

on:
  release:
    types: [published]
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: read

jobs:
  pypi_upload:

    name: Upload release to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/ardupilot_methodic_configurator
    permissions:
      id-token: write

    steps:
    - name: Harden the runner (Audit all outbound calls)
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        egress-policy: audit

    - name: Checkout
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    # https://docs.astral.sh/uv/guides/integration/github/
    - name: Install uv and set the python version
      uses: astral-sh/setup-uv@3259c6206f993105e3a61b142c2d97bf4b9ef83d # v7.1.0
      with:
        python-version: '3.13'
        activate-environment: true

    - name: Install dependencies
      run: |
        # Read pypi_dist from pyproject.toml and install those packages with uv
        PKGS="$(python scripts/list_pypi_build_dependencies.py)"
        if [ -n "$PKGS" ]; then
          uv pip install $PKGS
        else
          echo "No pypi_dist entries found in pyproject.toml; skipping install"
        fi

    - name: Build package
      run: python -m build

    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e # release/v1
