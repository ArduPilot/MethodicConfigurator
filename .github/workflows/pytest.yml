name: Pytest

# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#packaging-workflow-data-as-artifacts

on:
  push:
    paths:
      - '**/*.py'        # Watch for changes in any Python files
      - 'pyproject.yml'  # Watch for changes in the pyproject.yml file
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        # python-version: ["3.9", "3.10", "3.11", "3.12", "pypy3.9", "pypy3.10"]
        os: [ubuntu-latest]
        python-version: ["3.9", "3.13"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          python -m pip install -U pymavlink pytest pytest-cov mock
          pip install build
          pip install -U .

      - name: Install apt packages
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb

      - name: Test with pytest
        run: |
          export DISPLAY=:99
          Xvfb :99 -screen 0 1024x768x16 &
          pytest --junitxml=tests/test-results-${{ matrix.python-version }}.xml

      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        with:
            name: pytest-results-${{ matrix.python-version }}
            path: tests/test-results-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
