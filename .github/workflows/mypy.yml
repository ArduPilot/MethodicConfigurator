name: mypy

on:
  pull_request:
    paths:
      - '**/*.py'        # Watch for changes in any Python files
      - 'pyproject.toml' # Watch for changes in the pyproject.toml file
  push:
    paths:
      - '**/*.py'        # Watch for changes in any Python files
      - 'pyproject.toml' # Watch for changes in the pyproject.toml file
  workflow_dispatch:
  release:
    types: [published]

concurrency:
  group: ci-${{github.workflow}}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  mypy:
    name: mypy
    runs-on: ubuntu-latest

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install dependencies
        id: install_deps
        continue-on-error: true
        run: |
          WARNINGS=0

          export MYPY_VERSION=$(grep -oP 'mypy==\K[0-9]+(\.[0-9]+)*' pyproject.toml || echo '')
          export TYPES_REQUESTS_VERSION=$(grep -oP 'types-requests==\K[0-9]+(\.[0-9]+)*' pyproject.toml || echo '')

          if [ -z "$MYPY_VERSION" ]; then
            echo "::warning::Could not detect mypy version in pyproject.toml; falling back to latest."
            MYPY_INSTALL="mypy"
            WARNINGS=1
          else
            echo "Will install mypy version $MYPY_VERSION."
            MYPY_INSTALL="mypy==$MYPY_VERSION"
          fi

          if [ -z "$TYPES_REQUESTS_VERSION" ]; then
            echo "::warning::Could not detect types-requests version in pyproject.toml; falling back to latest."
            TYPES_REQUESTS_INSTALL="types-requests"
            WARNINGS=1
          else
            echo "Will install types-requests version $TYPES_REQUESTS_VERSION."
            TYPES_REQUESTS_INSTALL="types-requests==$TYPES_REQUESTS_VERSION"
          fi

          python -m pip install "$MYPY_INSTALL" "$TYPES_REQUESTS_INSTALL"

          echo "warnings=$WARNINGS" >> $GITHUB_OUTPUT
          if [ "$WARNINGS" -eq 1 ]; then
            exit 1
          fi

      - name: Lint the code with mypy
        uses: sasanquaneuf/mypy-github-action@a3f3a66f97792cac0cfd11d3e5c87088e5c8f6a9 # releases/v1.3
        with:
          checkName: 'mypy'   # NOTE: this needs to be the same as the job name
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
