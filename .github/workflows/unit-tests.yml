name: Python unit-tests

on:
  push:
    paths:
      - '**/*.py'        # Watch for changes in any Python files
      - 'pyproject.yml'  # Watch for changes in the pyproject.yml file
      - 'workflows/unit-tests.yml'
  workflow_dispatch:

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        # python-version: ["3.9", "3.10", "3.11", "3.12", "pypy3.9", "pypy3.10"]
        os: [ubuntu-latest]
        python-version: ["3.10"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -U platformdirs pymavlink mock coverage
          pip install build
          pip install -U .

      - name: Set PYTHONPATH
        run: |
          echo "$PYTHONPATH"
          echo "PYTHONPATH=/home/runner/work/MethodicConfigurator/ardupilot_methodic_configurator/ardupilot_methodic_configurator" >> $GITHUB_ENV
          echo "$PYTHONPATH"

      - name: Test with unittest
        run: |
          python -m unittest discover -s ./unittests -p '*_test.py'

      - name: Unittest coverage report
        run: |
          cd unittests
          python -m coverage run -m unittest annotate_params_test.py
          python -m coverage run -m unittest ardupilot_methodic_configurator_test.py
          python -m coverage run -m unittest backend_filesystem_test.py
          python -m coverage run -m unittest extract_param_defaults_test.py
          python -m coverage run -m unittest frontend_tkinter_test.py
          python -m coverage run -m unittest param_pid_adjustment_update_test.py
          python -m coverage html
