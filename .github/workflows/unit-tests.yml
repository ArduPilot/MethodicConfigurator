name: unittest

on:
  push:
    paths:
      - '**/*.py'        # Watch for changes in any Python files
      - 'pyproject.yml'  # Watch for changes in the pyproject.yml file
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        # python-version: ["3.9", "3.10", "3.11", "3.12", "pypy3.9", "pypy3.10"]
        os: [ubuntu-latest]
        python-version: ["3.10"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -U platformdirs pymavlink mock coverage pytest
          pip install build
          pip install -U .

      - name: Install apt packages
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb

      - name: Set PYTHONPATH
        run: |
          echo "PYTHONPATH=/home/runner/work/MethodicConfigurator/ardupilot_methodic_configurator/ardupilot_methodic_configurator" >> $GITHUB_ENV

      - name: Test with unittest
        run: |
          export DISPLAY=:99
          Xvfb :99 -screen 0 1024x768x16 &
          python -m unittest discover -s ./tests -p 'test_*.py'

      - name: Unittest coverage report
        run: |
          cd tests
          python -m coverage run -m unittest test_annotate_params.py
          python -m coverage run -m unittest test_ardupilot_methodic_configurator.py
          python -m coverage run -m unittest test_backend_filesystem.py
          python -m coverage run -m unittest test_extract_param_defaults.py
          python -m coverage run -m unittest test_frontend_tkinter.py
          python -m coverage run -m unittest test_param_pid_adjustment_update.py
          python -m coverage html
