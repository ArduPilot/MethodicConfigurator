name: Version Bump and Tag

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'New version number (X.Y.Z format)'
        required: true
        type: string
      tag_message:
        description: 'Tag message'
        required: true
        type: string

permissions:
  contents: write # to trigger the windows_build and python-publish workflows

jobs:
  bump-version:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ssh-key: "${{ secrets.VERSION_BUMP_KEY }}"  # This is a deploy key with write access, without it other workflows will not get triggered to run

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install packaging

      - name: Validate version format
        run: |
          if ! [[ ${{ github.event.inputs.version }} =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid version format. Must be X.Y.Z"
            exit 1
          fi

      - name: Get current version
        id: current_version
        run: |
          CURRENT_VERSION=$(grep -oP '__version__ = "\K[^"]+' ardupilot_methodic_configurator/__init__.py)
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Compare versions
        run: |
          python3 - <<EOF
          from packaging import version
          current = version.parse("${{ steps.current_version.outputs.current_version }}")
          new = version.parse("${{ github.event.inputs.version }}")
          if new <= current:
              print(f"Error: New version {new} must be greater than current version {current}")
              exit(1)
          print(f"Version increase valid: {current} -> {new}")
          EOF

      - name: Update version in __init__.py
        run: |
          sed -i 's/__version__ = ".*"/__version__ = "${{ github.event.inputs.version }}"/' ardupilot_methodic_configurator/__init__.py

      - name: Commit and push changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add ardupilot_methodic_configurator/__init__.py
          git commit -m "CHORE: Bump version info, tag and release"
          git push

      - name: Create and push tag
        run: |
          git tag -a "v${{ github.event.inputs.version }}" -m "${{ github.event.inputs.tag_message }}"
          git push origin "v${{ github.event.inputs.version }}"
